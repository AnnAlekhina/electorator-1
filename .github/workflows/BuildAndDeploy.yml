name: Build and Deploy

env:
  DEV_TAG: dev-${GITHUB_SHA::8}
  PROD_TAG: prod-${GITHUB_SHA::8}
  PROJ_PATH: /home/team/electorator

on:
  push:
    branches:
      - dev
      - master
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    branches:
      - master
      - dev
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'dev') || contains(github.ref, 'master')
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install -r electorator/requirements.txt
      - name: Lint with Pylint
        run: make lint

  build:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'dev') || contains(github.ref, 'master')
    steps:
      - uses: actions/checkout@v1
      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker images
        run: |
          docker build \
          --tag ${{ secrets.DOCKERHUB_USERNAME }}/electorator:${{ env.DEV_TAG }} \
          --tag ${{ secrets.DOCKERHUB_USERNAME }}/electorator:latest \
          -f docker/electorator.Dockerfile .
      - name: Tag prod images
        if: ${{ contains(github.ref, 'master') && contains(github.event_name, 'push') }}
        run: |
          docker image tag ${{ secrets.DOCKERHUB_USERNAME }}/electorator:latest ${{ secrets.DOCKERHUB_USERNAME }}/electorator:${{ env.PROD_TAG }}
      - name: Push the images
        run: |
          docker push --all-tags ${{ secrets.DOCKERHUB_USERNAME }}/electorator
  deployOnDev:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'dev') && (contains(github.event_name, 'push') || contains(github.event_name, 'workflow_dispatch'))
    needs: build
    steps:
      - name: Pull docker-compose
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd ${{ env.PROJ_PATH }}
            git checkout .
            git checkout dev
            git pull
      - name: Run project
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd ${{ env.PROJ_PATH }}
            cd frontend
            npm ci
            VUE_APP_DOMAIN=https://${{ secrets.HOST }} npm run build
            cd ../
            REPO=${{ secrets.DOCKERHUB_USERNAME }} TAG=${{ env.DEV_TAG }} ENV=dev \
            docker-compose up -d
            docker image prune -a --force  --filter "until=24h"